When would you want to use a remote repository rather than keeping all your work
local?  
    
    When more than one person are working on the same project then to share our code with other team members we have to remote our repository

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
	
	Because since many team members are working on the same code and I dont want that my code will change without my permission

Describe the differences between forks, clones, and branches. When would you use one instead of another?

	Forks, clones, and branches are all ways to add new changes without
    affecting the existing version.  With branches the new changes are added in
    the same repository.  Forking and cloning both copy an entire repository to
    a new location.  The difference between forking and cloning is that forking
    is a special construct made by GitHub.  You can only fork a GitHub
    repository to another location on GitHub, while you can clone any Git
    repository to anywhere you have access to.
    I use branching for most cases where I want to add new changes to a
    repository while keeping an easy reference to a previous version, especially
    when collaborating with other people.  I clone a repository on GitHub when I
    want to work on that repository locally rather than using the GitHub
    website.  I fork a repository on GitHub when I want to make changes to that
    repository public, but I don't have permission to modify the original.

What is the benefit of having a copy of the last known state of the remote
stored locally?

	 If I am about to go without Internet access for a while, for example to work
    on a plane, I can update my local copy before I leave.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

	I would be really dfficult to collabrate without github we cant share our code and also we cant able to update someone's file easily

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
	I tend to work directly in master more often when I'm working on my own or
    with just one or two other people.  When working with a large group, though,
    using branches to keep track of which changes have already been reviewed and
    approved is extremely helpful.